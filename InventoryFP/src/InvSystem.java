
        import java.sql.Connection;
        import java.util.logging.Level;
        import java.util.logging.Logger;
        import java.sql.DriverManager;
        import java.sql.SQLException;
        import javax.swing.JFrame;
        import java.sql.Statement;
        import javax.swing.JOptionPane;
        import java.sql.PreparedStatement;  
        import java.sql.ResultSet;
        import java.util.ArrayList;
        import java.util.Collections;
        import java.util.List;
        import java.util.Vector;
        import javax.swing.RowFilter;
        import javax.swing.event.ListSelectionEvent;
        import javax.swing.event.ListSelectionListener;
        import javax.swing.table.DefaultTableModel;
        import javax.swing.table.TableRowSorter;
        
public class InvSystem extends javax.swing.JFrame {

    /**
     * Creates new form InvSystem
     */
    public InvSystem() throws SQLException {
        initComponents();
        
        Connect();
        
    }
    
    Connection con;
    Statement st;
    PreparedStatement pst;
    ResultSet rs;
    
        //Driver, DatabaseName, URL, Name, Password
    private static final String DbDriver = "com.mysql.cj.jdbc.Driver";
    private static final String DbName = "pcthings";
    private static final String Dburl = "jdbc:mysql://localhost:3306/" + DbName;
    private static final String DbUsername = "root";
    private static final String DbPassword = "";
    
    public void Connect() throws SQLException {
        
        try {
            Class.forName(DbDriver);
            con = DriverManager.getConnection(Dburl, DbUsername, DbPassword);
            st = con.createStatement();
            if (con != null) {
                System.out.println("Inventory Pane Connected");
            }
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(InvSystem.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel5 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jTabbedPane2 = new javax.swing.JTabbedPane();
        jPanel6 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblProd = new javax.swing.JTable();
        jLabel10 = new javax.swing.JLabel();
        txtProdID = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        txtProdname = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        cbxProdcat = new javax.swing.JComboBox<>();
        jLabel13 = new javax.swing.JLabel();
        cbxProdpart = new javax.swing.JComboBox<>();
        jLabel14 = new javax.swing.JLabel();
        txtProddate = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        txtProdQty = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        txtProdprice = new javax.swing.JTextField();
        btnAdd = new javax.swing.JButton();
        btnEdit = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        btnTot = new javax.swing.JButton();
        jLabel17 = new javax.swing.JLabel();
        txtSearch = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();
        lblTot = new javax.swing.JLabel();
        btnTot1 = new javax.swing.JButton();
        jPanel7 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblSup = new javax.swing.JTable();
        jLabel20 = new javax.swing.JLabel();
        txtSupID = new javax.swing.JTextField();
        jLabel21 = new javax.swing.JLabel();
        txtSupname = new javax.swing.JTextField();
        jLabel22 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        txtSupsearch = new javax.swing.JTextField();
        jLabel25 = new javax.swing.JLabel();
        txtSupdate = new javax.swing.JTextField();
        jLabel26 = new javax.swing.JLabel();
        jLabel27 = new javax.swing.JLabel();
        txtSupprice = new javax.swing.JTextField();
        btnSupAdd = new javax.swing.JButton();
        btnSupEdit = new javax.swing.JButton();
        btnSupDelete = new javax.swing.JButton();
        jLabel28 = new javax.swing.JLabel();
        cbxSupstat = new javax.swing.JComboBox<>();
        txtSupno = new javax.swing.JTextField();
        txtSupor = new javax.swing.JTextField();
        cbxSupQty = new javax.swing.JComboBox<>();
        btnSupView = new javax.swing.JButton();
        jPanel8 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tblAcc = new javax.swing.JTable();
        jLabel29 = new javax.swing.JLabel();
        txtUan = new javax.swing.JTextField();
        jLabel30 = new javax.swing.JLabel();
        txtUemail = new javax.swing.JTextField();
        jLabel31 = new javax.swing.JLabel();
        jLabel32 = new javax.swing.JLabel();
        jLabel33 = new javax.swing.JLabel();
        btnUview = new javax.swing.JButton();
        btnUedit = new javax.swing.JButton();
        btnUdelete = new javax.swing.JButton();
        jLabel36 = new javax.swing.JLabel();
        txtUsearch = new javax.swing.JTextField();
        cbxUstat = new javax.swing.JComboBox<>();
        txtUfname = new javax.swing.JTextField();
        txtUlname = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel5.setBackground(new java.awt.Color(204, 255, 204));

        jButton1.setBackground(new java.awt.Color(153, 255, 255));
        jButton1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jButton1.setForeground(new java.awt.Color(0, 0, 0));
        jButton1.setText("LOG OUT");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setBackground(new java.awt.Color(153, 255, 255));
        jButton2.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jButton2.setForeground(new java.awt.Color(0, 0, 0));
        jButton2.setText("PRODUCT");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setBackground(new java.awt.Color(153, 255, 255));
        jButton3.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jButton3.setForeground(new java.awt.Color(0, 0, 0));
        jButton3.setText("SUPPLIER");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setBackground(new java.awt.Color(153, 255, 255));
        jButton4.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jButton4.setForeground(new java.awt.Color(0, 0, 0));
        jButton4.setText("USER");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(29, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addGap(53, 53, 53)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(39, 39, 39)
                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(37, 37, 37)
                .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 167, Short.MAX_VALUE)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30))
        );

        getContentPane().add(jPanel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 210, 570));

        jPanel6.setBackground(new java.awt.Color(153, 255, 255));

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 0, 0));
        jLabel3.setText("PRODUCT INVENTORY");
        jLabel3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel3MouseClicked(evt);
            }
        });

        tblProd.setBackground(new java.awt.Color(204, 255, 204));
        tblProd.setForeground(new java.awt.Color(0, 0, 0));
        tblProd.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Product ID", "Name", "Category", "Parts", "Date", "Quantity", "Price"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblProd.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblProdMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblProd);
        if (tblProd.getColumnModel().getColumnCount() > 0) {
            tblProd.getColumnModel().getColumn(0).setResizable(false);
            tblProd.getColumnModel().getColumn(1).setResizable(false);
            tblProd.getColumnModel().getColumn(2).setResizable(false);
            tblProd.getColumnModel().getColumn(3).setResizable(false);
            tblProd.getColumnModel().getColumn(4).setResizable(false);
            tblProd.getColumnModel().getColumn(5).setResizable(false);
            tblProd.getColumnModel().getColumn(6).setResizable(false);
        }

        jLabel10.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(0, 0, 0));
        jLabel10.setText("Product ID:");

        txtProdID.setBackground(new java.awt.Color(255, 255, 255));

        jLabel11.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(0, 0, 0));
        jLabel11.setText("Name:");

        txtProdname.setBackground(new java.awt.Color(255, 255, 255));

        jLabel12.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(0, 0, 0));
        jLabel12.setText("Category:");

        cbxProdcat.setBackground(new java.awt.Color(255, 255, 255));
        cbxProdcat.setForeground(new java.awt.Color(0, 0, 0));
        cbxProdcat.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Component", "Peripheral" }));

        jLabel13.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(0, 0, 0));
        jLabel13.setText("Parts:");

        cbxProdpart.setBackground(new java.awt.Color(255, 255, 255));
        cbxProdpart.setForeground(new java.awt.Color(0, 0, 0));
        cbxProdpart.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Input Device", "Output Device", "GPU", "Motherboard", "Processor", "PSU", "RAM", "Storage" }));

        jLabel14.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(0, 0, 0));
        jLabel14.setText("Date:");

        txtProddate.setBackground(new java.awt.Color(255, 255, 255));

        jLabel15.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(0, 0, 0));
        jLabel15.setText("Quantity:");

        txtProdQty.setBackground(new java.awt.Color(255, 255, 255));

        jLabel16.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel16.setForeground(new java.awt.Color(0, 0, 0));
        jLabel16.setText("Price:");

        txtProdprice.setBackground(new java.awt.Color(255, 255, 255));

        btnAdd.setBackground(new java.awt.Color(0, 102, 102));
        btnAdd.setFont(new java.awt.Font("Segoe UI", 1, 10)); // NOI18N
        btnAdd.setForeground(new java.awt.Color(0, 0, 0));
        btnAdd.setText("ADD");
        btnAdd.setBorder(null);
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        btnEdit.setBackground(new java.awt.Color(0, 102, 102));
        btnEdit.setFont(new java.awt.Font("Segoe UI", 1, 10)); // NOI18N
        btnEdit.setForeground(new java.awt.Color(0, 0, 0));
        btnEdit.setText("EDIT");
        btnEdit.setBorder(null);
        btnEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditActionPerformed(evt);
            }
        });

        btnDelete.setBackground(new java.awt.Color(0, 102, 102));
        btnDelete.setFont(new java.awt.Font("Segoe UI", 1, 10)); // NOI18N
        btnDelete.setForeground(new java.awt.Color(0, 0, 0));
        btnDelete.setText("DELETE");
        btnDelete.setBorder(null);
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        btnTot.setBackground(new java.awt.Color(0, 102, 102));
        btnTot.setFont(new java.awt.Font("Segoe UI", 1, 10)); // NOI18N
        btnTot.setForeground(new java.awt.Color(0, 0, 0));
        btnTot.setText("TOTAL");
        btnTot.setBorder(null);
        btnTot.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTotActionPerformed(evt);
            }
        });

        jLabel17.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel17.setForeground(new java.awt.Color(0, 0, 0));
        jLabel17.setText("SEARCH:");

        txtSearch.setBackground(new java.awt.Color(255, 255, 255));
        txtSearch.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                txtSearchMouseReleased(evt);
            }
        });
        txtSearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtSearchKeyReleased(evt);
            }
        });

        jLabel18.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        jLabel18.setForeground(new java.awt.Color(0, 0, 0));
        jLabel18.setText("₱");

        lblTot.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        lblTot.setForeground(new java.awt.Color(0, 0, 0));
        lblTot.setText("0.00");

        btnTot1.setBackground(new java.awt.Color(0, 102, 102));
        btnTot1.setFont(new java.awt.Font("Segoe UI", 1, 10)); // NOI18N
        btnTot1.setForeground(new java.awt.Color(0, 0, 0));
        btnTot1.setText("VIEW");
        btnTot1.setBorder(null);
        btnTot1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTot1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 740, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel11)
                            .addComponent(jLabel10)
                            .addComponent(jLabel13)
                            .addComponent(jLabel12))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtProdname, javax.swing.GroupLayout.DEFAULT_SIZE, 147, Short.MAX_VALUE)
                            .addComponent(cbxProdcat, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(cbxProdpart, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtProdID))
                        .addGap(22, 22, 22)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel6Layout.createSequentialGroup()
                                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel14)
                                    .addComponent(jLabel15)
                                    .addComponent(jLabel16))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(txtProdQty)
                                    .addComponent(txtProddate)
                                    .addComponent(txtProdprice, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 147, Short.MAX_VALUE)))
                            .addGroup(jPanel6Layout.createSequentialGroup()
                                .addGap(17, 17, 17)
                                .addComponent(btnAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(btnEdit, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(btnTot1, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(btnTot, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(jLabel17)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 264, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel18)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblTot, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap(26, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addComponent(jLabel3)
                .addGap(24, 24, 24)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(txtProdID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel14)
                    .addComponent(txtProddate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(txtProdname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel15)
                    .addComponent(txtProdQty, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbxProdcat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel12)
                    .addComponent(jLabel16)
                    .addComponent(txtProdprice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(cbxProdpart, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnEdit, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnTot, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnTot1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 34, Short.MAX_VALUE)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel18)
                        .addComponent(lblTot, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel17)
                        .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(23, 23, 23))
        );

        jTabbedPane2.addTab("PRODUCT", jPanel6);

        jPanel7.setBackground(new java.awt.Color(153, 255, 255));

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(0, 0, 0));
        jLabel4.setText("SUPPLIER MANAGEMENT");
        jLabel4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel4MouseClicked(evt);
            }
        });

        tblSup.setBackground(new java.awt.Color(204, 255, 204));
        tblSup.setForeground(new java.awt.Color(0, 0, 0));
        tblSup.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Supplier ID", "Name", "Contact No", "Prod Ordered", "Date", "Quantity", "Price", "Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblSup.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblSupMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tblSup);
        if (tblSup.getColumnModel().getColumnCount() > 0) {
            tblSup.getColumnModel().getColumn(0).setResizable(false);
            tblSup.getColumnModel().getColumn(1).setResizable(false);
            tblSup.getColumnModel().getColumn(2).setResizable(false);
            tblSup.getColumnModel().getColumn(3).setResizable(false);
            tblSup.getColumnModel().getColumn(4).setResizable(false);
            tblSup.getColumnModel().getColumn(5).setResizable(false);
            tblSup.getColumnModel().getColumn(5).setHeaderValue("Quantity");
            tblSup.getColumnModel().getColumn(6).setResizable(false);
            tblSup.getColumnModel().getColumn(6).setHeaderValue("Price");
            tblSup.getColumnModel().getColumn(7).setHeaderValue("Status");
        }

        jLabel20.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel20.setForeground(new java.awt.Color(0, 0, 0));
        jLabel20.setText("Supplier ID:");

        txtSupID.setBackground(new java.awt.Color(255, 255, 255));

        jLabel21.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel21.setForeground(new java.awt.Color(0, 0, 0));
        jLabel21.setText("Name:");

        txtSupname.setBackground(new java.awt.Color(255, 255, 255));

        jLabel22.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel22.setForeground(new java.awt.Color(0, 0, 0));
        jLabel22.setText("Contact No:");

        jLabel23.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel23.setForeground(new java.awt.Color(0, 0, 0));
        jLabel23.setText("Product Ordered:");

        jLabel24.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel24.setForeground(new java.awt.Color(0, 0, 0));
        jLabel24.setText("SEARCH:");

        txtSupsearch.setBackground(new java.awt.Color(255, 255, 255));
        txtSupsearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtSupsearchKeyReleased(evt);
            }
        });

        jLabel25.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel25.setForeground(new java.awt.Color(0, 0, 0));
        jLabel25.setText("Date:");

        txtSupdate.setBackground(new java.awt.Color(255, 255, 255));

        jLabel26.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel26.setForeground(new java.awt.Color(0, 0, 0));
        jLabel26.setText("Quantity:");

        jLabel27.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel27.setForeground(new java.awt.Color(0, 0, 0));
        jLabel27.setText("Price:");

        txtSupprice.setBackground(new java.awt.Color(255, 255, 255));

        btnSupAdd.setBackground(new java.awt.Color(0, 102, 102));
        btnSupAdd.setFont(new java.awt.Font("Segoe UI", 1, 10)); // NOI18N
        btnSupAdd.setForeground(new java.awt.Color(0, 0, 0));
        btnSupAdd.setText("ADD");
        btnSupAdd.setBorder(null);
        btnSupAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSupAddActionPerformed(evt);
            }
        });

        btnSupEdit.setBackground(new java.awt.Color(0, 102, 102));
        btnSupEdit.setFont(new java.awt.Font("Segoe UI", 1, 10)); // NOI18N
        btnSupEdit.setForeground(new java.awt.Color(0, 0, 0));
        btnSupEdit.setText("EDIT");
        btnSupEdit.setBorder(null);
        btnSupEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSupEditActionPerformed(evt);
            }
        });

        btnSupDelete.setBackground(new java.awt.Color(0, 102, 102));
        btnSupDelete.setFont(new java.awt.Font("Segoe UI", 1, 10)); // NOI18N
        btnSupDelete.setForeground(new java.awt.Color(0, 0, 0));
        btnSupDelete.setText("DELETE");
        btnSupDelete.setBorder(null);
        btnSupDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSupDeleteActionPerformed(evt);
            }
        });

        jLabel28.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel28.setForeground(new java.awt.Color(0, 0, 0));
        jLabel28.setText("Status:");

        cbxSupstat.setBackground(new java.awt.Color(255, 255, 255));
        cbxSupstat.setForeground(new java.awt.Color(0, 0, 0));
        cbxSupstat.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Processing", "Shipped", "Delivered" }));

        txtSupno.setBackground(new java.awt.Color(255, 255, 255));

        txtSupor.setBackground(new java.awt.Color(255, 255, 255));

        cbxSupQty.setBackground(new java.awt.Color(255, 255, 255));
        cbxSupQty.setForeground(new java.awt.Color(0, 0, 0));
        cbxSupQty.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "10", "20", "30" }));

        btnSupView.setBackground(new java.awt.Color(0, 102, 102));
        btnSupView.setFont(new java.awt.Font("Segoe UI", 1, 10)); // NOI18N
        btnSupView.setForeground(new java.awt.Color(0, 0, 0));
        btnSupView.setText("VIEW");
        btnSupView.setBorder(null);
        btnSupView.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSupViewActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addComponent(jLabel24)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtSupsearch, javax.swing.GroupLayout.PREFERRED_SIZE, 264, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnSupAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnSupEdit, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnSupDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnSupView, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel21)
                            .addComponent(jLabel20)
                            .addComponent(jLabel23)
                            .addComponent(jLabel22))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtSupname)
                            .addComponent(txtSupID, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtSupno)
                            .addComponent(txtSupor))
                        .addGap(22, 22, 22)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel25)
                            .addComponent(jLabel26)
                            .addComponent(jLabel27)
                            .addComponent(jLabel28))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(txtSupdate)
                            .addComponent(txtSupprice, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cbxSupstat, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(cbxSupQty, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 740, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addContainerGap(26, Short.MAX_VALUE))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addComponent(jLabel4)
                .addGap(26, 26, 26)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel20)
                    .addComponent(txtSupID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel25)
                    .addComponent(txtSupdate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel21)
                    .addComponent(txtSupname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel26)
                    .addComponent(cbxSupQty, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel22)
                    .addComponent(jLabel27)
                    .addComponent(txtSupprice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtSupno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel23)
                    .addComponent(jLabel28)
                    .addComponent(cbxSupstat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtSupor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 34, Short.MAX_VALUE)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnSupAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnSupEdit, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnSupDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnSupView, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel24)
                        .addComponent(txtSupsearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(23, 23, 23))
        );

        jTabbedPane2.addTab("SUPPLIER", jPanel7);

        jPanel8.setBackground(new java.awt.Color(153, 255, 255));

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(0, 0, 0));
        jLabel5.setText("USER MANAGEMENT");
        jLabel5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel5MouseClicked(evt);
            }
        });

        tblAcc.setBackground(new java.awt.Color(204, 255, 204));
        tblAcc.setForeground(new java.awt.Color(0, 0, 0));
        tblAcc.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Account No.", "Account Email", "First Name", "Last Name", "Account Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblAcc.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblAccMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(tblAcc);
        if (tblAcc.getColumnModel().getColumnCount() > 0) {
            tblAcc.getColumnModel().getColumn(0).setResizable(false);
            tblAcc.getColumnModel().getColumn(1).setResizable(false);
            tblAcc.getColumnModel().getColumn(2).setResizable(false);
            tblAcc.getColumnModel().getColumn(3).setResizable(false);
            tblAcc.getColumnModel().getColumn(4).setResizable(false);
        }

        jLabel29.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel29.setForeground(new java.awt.Color(0, 0, 0));
        jLabel29.setText("Account No.");

        txtUan.setBackground(new java.awt.Color(255, 255, 255));

        jLabel30.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel30.setForeground(new java.awt.Color(0, 0, 0));
        jLabel30.setText("Account Email:");

        txtUemail.setBackground(new java.awt.Color(255, 255, 255));

        jLabel31.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel31.setForeground(new java.awt.Color(0, 0, 0));
        jLabel31.setText("First Name");

        jLabel32.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel32.setForeground(new java.awt.Color(0, 0, 0));
        jLabel32.setText("Last Name:");

        jLabel33.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel33.setForeground(new java.awt.Color(0, 0, 0));
        jLabel33.setText("Account Status:");

        btnUview.setBackground(new java.awt.Color(0, 102, 102));
        btnUview.setFont(new java.awt.Font("Segoe UI", 1, 10)); // NOI18N
        btnUview.setForeground(new java.awt.Color(0, 0, 0));
        btnUview.setText("VIEW");
        btnUview.setBorder(null);
        btnUview.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUviewActionPerformed(evt);
            }
        });

        btnUedit.setBackground(new java.awt.Color(0, 102, 102));
        btnUedit.setFont(new java.awt.Font("Segoe UI", 1, 10)); // NOI18N
        btnUedit.setForeground(new java.awt.Color(0, 0, 0));
        btnUedit.setText("EDIT");
        btnUedit.setBorder(null);
        btnUedit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUeditActionPerformed(evt);
            }
        });

        btnUdelete.setBackground(new java.awt.Color(0, 102, 102));
        btnUdelete.setFont(new java.awt.Font("Segoe UI", 1, 10)); // NOI18N
        btnUdelete.setForeground(new java.awt.Color(0, 0, 0));
        btnUdelete.setText("DELETE");
        btnUdelete.setBorder(null);
        btnUdelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUdeleteActionPerformed(evt);
            }
        });

        jLabel36.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel36.setForeground(new java.awt.Color(0, 0, 0));
        jLabel36.setText("SEARCH:");

        txtUsearch.setBackground(new java.awt.Color(255, 255, 255));
        txtUsearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtUsearchKeyReleased(evt);
            }
        });

        cbxUstat.setBackground(new java.awt.Color(255, 255, 255));
        cbxUstat.setForeground(new java.awt.Color(0, 0, 0));
        cbxUstat.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Active", "Inactive" }));

        txtUfname.setBackground(new java.awt.Color(255, 255, 255));

        txtUlname.setBackground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(jPanel8Layout.createSequentialGroup()
                            .addComponent(jLabel36)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(txtUsearch, javax.swing.GroupLayout.PREFERRED_SIZE, 264, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(156, 156, 156))
                        .addGroup(jPanel8Layout.createSequentialGroup()
                            .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jLabel30)
                                .addComponent(jLabel29)
                                .addComponent(jLabel32)
                                .addComponent(jLabel31))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(txtUemail)
                                .addComponent(txtUan, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txtUfname)
                                .addComponent(txtUlname))
                            .addGap(22, 22, 22)
                            .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(jPanel8Layout.createSequentialGroup()
                                    .addComponent(jLabel33)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(cbxUstat, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(jPanel8Layout.createSequentialGroup()
                                    .addComponent(btnUview, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)
                                    .addComponent(btnUedit, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)
                                    .addComponent(btnUdelete, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 740, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addContainerGap(26, Short.MAX_VALUE))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addComponent(jLabel5)
                .addGap(25, 25, 25)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel29)
                    .addComponent(txtUan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel33)
                    .addComponent(cbxUstat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel30)
                    .addComponent(txtUemail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel31)
                        .addComponent(txtUfname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnUview, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnUedit, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnUdelete, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel32)
                    .addComponent(txtUlname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 34, Short.MAX_VALUE)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel36)
                    .addComponent(txtUsearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(24, 24, 24))
        );

        jTabbedPane2.addTab("USER", jPanel8);

        getContentPane().add(jTabbedPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, -40, 790, 610));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jLabel3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel3MouseClicked
        jTabbedPane2.setSelectedIndex(2);
    }//GEN-LAST:event_jLabel3MouseClicked

    private void jLabel4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel4MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_jLabel4MouseClicked

    private void jLabel5MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel5MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_jLabel5MouseClicked

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        jTabbedPane2.setSelectedIndex(0);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        jTabbedPane2.setSelectedIndex(1);
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        jTabbedPane2.setSelectedIndex(2);
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        
        int choose = JOptionPane.showConfirmDialog(this, "Do you wish to Log Out?", "System Message", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
        
        if(choose == JOptionPane.YES_OPTION) {
        
        LoginForm lgn = new LoginForm();
        lgn.setVisible(true);
        lgn.pack();
        lgn.setLocationRelativeTo(null);
        this.dispose();
        
    }
        else if(choose == JOptionPane.NO_OPTION) {
    }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        
        String prodID = txtProdID.getText();
        String prodName = txtProdname.getText();
        String prodCat = cbxProdcat.getSelectedItem().toString();
        String prodPart = cbxProdpart.getSelectedItem().toString();
        String prodDate = txtProddate.getText();
        String prodQty = txtProdQty.getText();
        String prodPrice = txtProdprice.getText();
        
        //Will notify user to fill up all fields
        if (prodID.equals("") || prodName.equals("") || prodCat.equals("") || prodPart.equals("") || prodDate.equals("")
                || prodQty.equals("") || prodPrice.equals("")) {
            JOptionPane.showMessageDialog(null, "Please fill up all missing fields");
        }
        else {
            try {
                //Inputted fields will be ADDED to the JTABLE
                String data[] = {prodID, prodName, prodCat, prodPart, prodDate, prodQty, prodPrice};
                DefaultTableModel tbModel = (DefaultTableModel) tblProd.getModel();
                tbModel.addRow(data);
                
                //Inputted fields will be ADDED to the DATABASE
                String query = "INSERT INTO invsys (prdID, prdName, prdCat, prdPart, prdDate, prdQty, prdPrice, `Status`) VALUES (?, ?, ?, ?, ?, ?, ?, 'In stock')";
                PreparedStatement pst = con.prepareStatement(query);
                pst.setString(1, prodID);
                pst.setString(2, prodName);
                pst.setString(3, prodCat);
                pst.setString(4, prodPart);
                pst.setString(5, prodDate);
                pst.setString(6, prodQty);
                pst.setString(7, prodPrice);
                
                int result = pst.executeUpdate();
                if (result > 0) {
                    JOptionPane.showMessageDialog(null, "Product Added Sucessfully");
                }
                else {
                    JOptionPane.showMessageDialog(new JFrame(), "Failed to Add product", "System Message", JOptionPane.ERROR_MESSAGE);
                }
                
                //Text Fields will REFRESH after
                txtProdID.setText("");
                txtProdname.setText("");
                txtProddate.setText("");
                txtProdQty.setText("");
                txtProdprice.setText("");
                
            } catch (SQLException ex) {
                Logger.getLogger(InvSystem.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_btnAddActionPerformed

    private void btnEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditActionPerformed
        
        String prdID = txtProdID.getText();
        String prdName = txtProdname.getText();
        String prdCat = cbxProdcat.getSelectedItem().toString();
        String prdPart = cbxProdpart.getSelectedItem().toString();
        String prdDate = txtProddate.getText();
        String prdQty = txtProdQty.getText();
        String prdPrice = txtProdprice.getText();
        
        //Will REQUIRE user to fill all fields
        if (prdID.equals("") || prdName.equals("") || prdCat.equals("") || prdPart.equals("") || prdDate.equals("")
        || prdQty.equals("") || prdPrice.equals("")) {
            JOptionPane.showMessageDialog(null, "Please select a Product to Edit");
        }
        else {
            try {
                
                //Inputted information will UPDATE DATABASE
                String query = "UPDATE invsys SET prdName=?, prdCat=?, prdPart=?, prdDate=?, prdQty=?, prdPrice=? WHERE prdID=?";
                PreparedStatement pst = con.prepareStatement(query);
                pst.setString(1, prdName);
                pst.setString(2, prdCat);
                pst.setString(3, prdPart);
                pst.setString(4, prdDate);
                pst.setString(5,prdQty);
                pst.setString(6, prdPrice);
                pst.setString(7, prdID);
                
                int updresult = pst.executeUpdate();
                if (updresult > 0) {
                    JOptionPane.showMessageDialog(null, "Product Updated Successfully");
                    
                    //Inputted information will UPDATE JTABLE
                    DefaultTableModel tblModel = (DefaultTableModel) tblProd.getModel();
                    if (tblProd.getSelectedRowCount() == 1) {
                    
                    String pID = txtProdID.getText();
                    String pName = txtProdname.getText();
                    String pCat = cbxProdcat.getSelectedItem().toString();
                    String pPart = cbxProdpart.getSelectedItem().toString();
                    String pDate = txtProddate.getText();
                    String pQty = txtProdQty.getText();
                    String pPrice = txtProdprice.getText();
                    
                    tblModel.setValueAt(pID, tblProd.getSelectedRow(), 0);
                    tblModel.setValueAt(pName, tblProd.getSelectedRow(), 1);
                    tblModel.setValueAt(pCat, tblProd.getSelectedRow(), 2);
                    tblModel.setValueAt(pPart, tblProd.getSelectedRow(), 3);
                    tblModel.setValueAt(pDate, tblProd.getSelectedRow(), 4);
                    tblModel.setValueAt(pQty, tblProd.getSelectedRow(), 5);
                    tblModel.setValueAt(pPrice, tblProd.getSelectedRow(), 6);
                    
                    txtProdID.setText(pID);
                    txtProdname.setText(pName);
                    txtProddate.setText(pDate);
                    txtProdQty.setText(pQty);
                    txtProdprice.setText(pPrice);
                    }
                    
                    //Text Fields will REFRESH after updating
                    txtProdID.setText("");
                    txtProdname.setText("");
                    txtProddate.setText("");
                    txtProdQty.setText("");
                    txtProdprice.setText("");
                }
                else {
                    JOptionPane.showMessageDialog(new JFrame(), "Failed to Edit Product", "System Message", JOptionPane.ERROR_MESSAGE);
                }              
            } catch (SQLException ex) {
                Logger.getLogger(InvSystem.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_btnEditActionPerformed

    private void tblProdMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblProdMouseClicked
        
        DefaultTableModel tblModel = (DefaultTableModel) tblProd.getModel();
        
        int cbxCat = tblProd.getSelectedRow();
        int cbxPart = tblProd.getSelectedRow();
        
        String tblID = tblProd.getValueAt(tblProd.getSelectedRow(), 0).toString();
        String tblName = tblProd.getValueAt(tblProd.getSelectedRow(), 1).toString();
        String tblCat = tblProd.getValueAt(cbxCat, 2).toString();
        String tblPart = tblProd.getValueAt(cbxPart, 3).toString();
        String tblDate = tblProd.getValueAt(tblProd.getSelectedRow(), 4).toString();
        String tblQty = tblProd.getValueAt(tblProd.getSelectedRow(), 5).toString();
        String tblPrice = tblProd.getValueAt(tblProd.getSelectedRow(), 6).toString();
        
        txtProdID.setText(tblID);
        txtProdname.setText(tblName);
        cbxProdcat.setSelectedItem(tblCat);
        cbxProdpart.setSelectedItem(tblPart);
        txtProddate.setText(tblDate);
        txtProdQty.setText(tblQty);
        txtProdprice.setText(tblPrice);
                
    }//GEN-LAST:event_tblProdMouseClicked

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        
        DefaultTableModel tblModel = (DefaultTableModel) tblProd.getModel();

        //Selected product on JTABLE will be REMOVED
        if (tblProd.getSelectedRowCount() == 1) {
            try {
                
                int selectedRow = tblProd.getSelectedRow();
                Object prdData = tblModel.getValueAt(selectedRow, 0);
                int prdChsn;

                try {
                    prdChsn = Integer.parseInt(prdData.toString());   
                } 
                catch (NumberFormatException e) {
                return;
                }
                
                tblModel.removeRow(selectedRow);
                
                //Will set STATUS of a product removed on TABLE of DATABASE
                String sql = "UPDATE invsys SET Status = 'Unavailable' WHERE prdID=?";
                try (PreparedStatement pst = con.prepareStatement(sql)) {
                    pst.setInt(1, prdChsn);
                    pst.executeUpdate();
                }

                JOptionPane.showMessageDialog(null, "Product Deleted Successfully");

                //Fields will REFRESH after deletion
                txtProdID.setText("");
                txtProdname.setText("");
                txtProddate.setText("");
                txtProdQty.setText("");
                txtProdprice.setText("");

            } 
            catch (SQLException ex) {
                Logger.getLogger(InvSystem.class.getName()).log(Level.SEVERE, null, ex);
            }
        } 
        else {
            if (tblProd.getSelectedRowCount() == 0) {
                JOptionPane.showMessageDialog(null, "Please select a Product to Delete");
            }
        }
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnTotActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTotActionPerformed
        
        int numrow = tblProd.getRowCount();
        double tot = 0;

        if (numrow == 0) { 
            lblTot.setText("0.00");
            JOptionPane.showMessageDialog(null, "No Product Found");
        } 
        else {
            for (int i = 0; i < numrow; i++) {
            double val = Double.valueOf(tblProd.getValueAt(i, 6).toString());
            tot += val;
        }
            lblTot.setText(String.format("%.2f", tot));
        }
    }//GEN-LAST:event_btnTotActionPerformed

    private void txtSearchMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtSearchMouseReleased
        
    }//GEN-LAST:event_txtSearchMouseReleased

    private void txtSearchKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSearchKeyReleased
        
        DefaultTableModel table = (DefaultTableModel)tblProd.getModel();
        String search = txtSearch.getText().toLowerCase();
        TableRowSorter<DefaultTableModel> tr = new TableRowSorter<>(table);
        tblProd.setRowSorter(tr);
        
        int[] findClmn = {0, 1, 2};
        tr.setRowFilter(RowFilter.regexFilter(search, findClmn));       
    }//GEN-LAST:event_txtSearchKeyReleased

    private void btnTot1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTot1ActionPerformed
        
            try {

            Class.forName("com.mysql.cj.jdbc.Driver");
            Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/pcthings?useSSL=false", "root", "");

            Statement st = con.createStatement();

            String sql = "SELECT * FROM invsys WHERE Status = 'In stock'";
            ResultSet rs = st.executeQuery(sql);

            DefaultTableModel tbModel = (DefaultTableModel) tblProd.getModel();
            tbModel.setRowCount(0); // Clear existing rows before adding new ones
            
            boolean dataxst = false;
            while (rs.next()) {
                
                dataxst = true;
                
                String prdctID = String.valueOf(rs.getInt("prdID"));
                String prdctName = rs.getString("prdName");
                String prdctCat = rs.getString("prdCat");
                String prdctPart = rs.getString("prdPart");
                String prdctDate = rs.getString("prdDate");
                String prdctQty = rs.getString("prdQty");
                String prdctPrice = rs.getString("prdPrice");

                String data[] = {prdctID, prdctName, prdctCat, prdctPart, prdctDate, prdctQty, prdctPrice};
                tbModel.addRow(data);
            }
            if (!dataxst) {
                JOptionPane.showMessageDialog(null, "No Data Found");
            }
        } 
        catch (ClassNotFoundException | SQLException ex) {
            Logger.getLogger(InvSystem.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnTot1ActionPerformed

    private void btnUviewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUviewActionPerformed
        
            try {

            Class.forName("com.mysql.cj.jdbc.Driver");
            Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/pcthings?useSSL=false", "root", "");

            Statement st = con.createStatement();

            String sql = "SELECT * FROM useracc WHERE AccStatus = 'Active' OR AccStatus = 'Inactive'";
            ResultSet rs = st.executeQuery(sql);

            DefaultTableModel tbModel = (DefaultTableModel) tblAcc.getModel();
            tbModel.setRowCount(0); // Clear existing rows before adding new ones
            
            boolean dataxst = false;
            while (rs.next()) {
                
                dataxst = true;
                
                String userID = String.valueOf(rs.getInt("accID"));
                String userEmail = rs.getString("accEmail");
                String userFirst = rs.getString("firstName");
                String userLast = rs.getString("LastName");
                String userStat = rs.getString("AccStatus");

                String data[] = {userID, userEmail, userFirst, userLast, userStat};
                tbModel.addRow(data);
            }
            if (!dataxst) {
                JOptionPane.showMessageDialog(null, "No Data Found");
            }
        } 
        catch (ClassNotFoundException | SQLException ex) {
            Logger.getLogger(InvSystem.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnUviewActionPerformed

    private void btnUeditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUeditActionPerformed
        
        String uID = txtUan.getText();
        String uEmail = txtUemail.getText();
        String uFirst = txtUfname.getText();
        String uLast = txtUlname.getText();
        String uStat = cbxUstat.getSelectedItem().toString();
        
        //Will REQUIRE user to fill all fields
        if (uID.equals("") || uEmail.equals("") || uFirst.equals("") || uLast.equals("") || uStat.equals("")) {
            JOptionPane.showMessageDialog(null, "Please Select An Account to Delete");
        }
        else {
            try {
                
                //Inputted information will UPDATE DATABASE
                String query = "UPDATE useracc SET accEmail=?, firstName=?, lastName=?, AccStatus=? WHERE accID=?";
                PreparedStatement pst = con.prepareStatement(query);
                pst.setString(1, uEmail);
                pst.setString(2, uFirst);
                pst.setString(3, uLast);
                pst.setString(4, uStat);
                pst.setString(5,uID);
                
                int updresult = pst.executeUpdate();
                if (updresult > 0) {
                    JOptionPane.showMessageDialog(null, "Product Updated Successfully");
                    
                    //Inputted information will UPDATE JTABLE
                    DefaultTableModel tblModel = (DefaultTableModel) tblAcc.getModel();
                    if (tblAcc.getSelectedRowCount() == 1) {
                    
                    String uaID = txtUan.getText();
                    String uaEmail = txtUemail.getText();
                    String uaF = txtUfname.getText();
                    String uaL = txtUlname.getText();
                    String uaSt = cbxUstat.getSelectedItem().toString();
                    
                    tblModel.setValueAt(uaID, tblAcc.getSelectedRow(), 0);
                    tblModel.setValueAt(uaEmail, tblAcc.getSelectedRow(), 1);
                    tblModel.setValueAt(uaF, tblAcc.getSelectedRow(), 2);
                    tblModel.setValueAt(uaL, tblAcc.getSelectedRow(), 3);
                    tblModel.setValueAt(uaSt, tblAcc.getSelectedRow(), 4);
                    
                    txtUan.setText(uaID);
                    txtUemail.setText(uaEmail);
                    txtUfname.setText(uaF);
                    txtUlname.setText(uaL);
                    }
                    
                    //Text Fields will REFRESH after updating
                    txtUan.setText("");
                    txtUemail.setText("");
                    txtUfname.setText("");
                    txtUlname.setText("");
                }
                else {
                    JOptionPane.showMessageDialog(new JFrame(), "Failed to Edit Account", "System Message", JOptionPane.ERROR_MESSAGE);
                }              
            } catch (SQLException ex) {
                Logger.getLogger(InvSystem.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_btnUeditActionPerformed

    private void tblAccMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblAccMouseClicked
        
        DefaultTableModel tblModel = (DefaultTableModel) tblAcc.getModel();
        
        int cbxStat = tblAcc.getSelectedRow();
        
        String tbluID = tblModel.getValueAt(tblAcc.getSelectedRow(), 0).toString();
        String tbluEmail = tblModel.getValueAt(tblAcc.getSelectedRow(), 1).toString();
        String tbluF = tblModel.getValueAt(tblAcc.getSelectedRow(), 2).toString();
        String tbluL = tblModel.getValueAt(tblAcc.getSelectedRow(), 3).toString();
        String tbluSt = tblModel.getValueAt(cbxStat, 4).toString();
        
        txtUan.setText(tbluID);
        txtUemail.setText(tbluEmail);
        txtUfname.setText(tbluF);
        txtUlname.setText(tbluL);
        cbxUstat.setSelectedItem(tbluSt);
    }//GEN-LAST:event_tblAccMouseClicked

    private void btnUdeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUdeleteActionPerformed
        
        DefaultTableModel tblModel = (DefaultTableModel) tblAcc.getModel();

        //Selected product on JTABLE will be REMOVED
        if (tblAcc.getSelectedRowCount() == 1) {
            try {
                
                int selectedRow = tblAcc.getSelectedRow();
                Object accData = tblModel.getValueAt(selectedRow, 0);
                int accChsn;

                try {
                    accChsn = Integer.parseInt(accData.toString());   
                } 
                catch (NumberFormatException e) {
                return;
                }
                
                tblModel.removeRow(selectedRow);
                
                //Will set STATUS of an Account TERMINATED on DATABASE table
                String sql = "UPDATE useracc SET AccStatus = 'Archived' WHERE accID=?";
                try (PreparedStatement pst = con.prepareStatement(sql)) {
                    pst.setInt(1, accChsn);
                    pst.executeUpdate();
                }

                JOptionPane.showMessageDialog(null, "Account Deleted Successfully");

                //Fields will REFRESH after deletion
                txtUan.setText("");
                txtUemail.setText("");
                txtUfname.setText("");
                txtUlname.setText("");

            } 
            catch (SQLException ex) {
                Logger.getLogger(InvSystem.class.getName()).log(Level.SEVERE, null, ex);
            }
        } 
        else if (tblAcc.getSelectedRowCount() == 0) {
                JOptionPane.showMessageDialog(null, "Please select an Account to Delete");
        }
    }//GEN-LAST:event_btnUdeleteActionPerformed

    private void txtUsearchKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtUsearchKeyReleased
        
        DefaultTableModel table = (DefaultTableModel)tblAcc.getModel();
        String search = txtUsearch.getText().toLowerCase();
        TableRowSorter<DefaultTableModel> tr = new TableRowSorter<>(table);
        tblAcc.setRowSorter(tr);
        
        int[] findUclm = {0, 1};
        tr.setRowFilter(RowFilter.regexFilter(search, findUclm)); 
    }//GEN-LAST:event_txtUsearchKeyReleased

    private void btnSupAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSupAddActionPerformed
        
        String supID = txtSupID.getText();
        String supName = txtSupname.getText();
        String supNo = txtSupno.getText();
        String supOrd = txtSupor.getText();
        String supDate = txtSupdate.getText();
        String supQty = cbxSupQty.getSelectedItem().toString();
        String supPrice = txtSupprice.getText();
        String supStat = cbxSupstat.getSelectedItem().toString();
        
        //Will notify user to fill up all fields
        if (supID.equals("") || supName.equals("") || supNo.equals("") || supOrd.equals("") || supDate.equals("")
                || supQty.equals("") || supPrice.equals("") || supStat.equals("")) {
            JOptionPane.showMessageDialog(this, "Please fill up all missing fields");
        }
        else {
            try {
                //Inputted fields will be ADDED to the JTABLE
                String data[] = {supID, supName, supNo, supOrd, supDate, supQty, supPrice, supStat};
                DefaultTableModel tbModel = (DefaultTableModel) tblSup.getModel();
                tbModel.addRow(data);
                
                //Inputted fields will be ADDED to the DATABASE
                String query = "INSERT INTO supmng (sID, sName, sNo, sPrd, sDate, sQty, sPrice, spStat, `sStat`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, 'Active')";
                PreparedStatement pst = con.prepareStatement(query);
                pst.setString(1, supID);
                pst.setString(2, supName);
                pst.setString(3, supNo);
                pst.setString(4, supOrd);
                pst.setString(5, supDate);
                pst.setString(6, supQty);
                pst.setString(7, supPrice);
                pst.setString(8, supStat);
                
                int result = pst.executeUpdate();
                if (result > 0) {
                    JOptionPane.showMessageDialog(null, "New Client Added Sucessfully");
                }
                else {
                    JOptionPane.showMessageDialog(new JFrame(), "Failed to Add Client", "System Message", JOptionPane.ERROR_MESSAGE);
                }
                
                //Text Fields will REFRESH after
                txtSupID.setText("");
                txtSupname.setText("");
                txtSupno.setText("");
                txtSupor.setText("");
                txtSupdate.setText("");
                txtSupprice.setText("");
                
            } catch (SQLException ex) {
                Logger.getLogger(InvSystem.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_btnSupAddActionPerformed

    private void btnSupEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSupEditActionPerformed
        
        String supID = txtSupID.getText();
        String supName = txtSupname.getText();
        String supNo = txtSupno.getText();
        String supOrd = txtSupor.getText();
        String supDate = txtSupdate.getText();
        String supQty = cbxSupQty.getSelectedItem().toString();
        String supPrice = txtSupprice.getText();
        String supStat = cbxSupstat.getSelectedItem().toString();
        
        //Will REQUIRE user to fill all fields
        if (supID.equals("") || supName.equals("") || supNo.equals("") || supOrd.equals("") || supDate.equals("")
        || supQty.equals("") || supPrice.equals("") || supStat.equals("")) {
            JOptionPane.showMessageDialog(this, "Please select a Client to Edit");
        }
        else {
            try {
                
                //Inputted information will UPDATE DATABASE
                String query = "UPDATE supmng SET sName=?, sNo=?, sPrd=?, sDate=?, sQty=?, sPrice=?, spStat=?  WHERE sID=?";
                PreparedStatement pst = con.prepareStatement(query);
                pst.setString(1, supName);
                pst.setString(2, supNo);
                pst.setString(3, supOrd);
                pst.setString(4, supDate);
                pst.setString(5,supQty);
                pst.setString(6, supPrice);
                pst.setString(7, supStat);
                pst.setString(8, supID);
                
                int updresult = pst.executeUpdate();
                if (updresult > 0) {
                    JOptionPane.showMessageDialog(null, "Client Updated Successfully");
                    
                    //Inputted information will UPDATE JTABLE
                    DefaultTableModel tblModel = (DefaultTableModel) tblSup.getModel();
                    if (tblSup.getSelectedRowCount() == 1) {
                    
                    String sID = txtSupID.getText();
                    String sName = txtSupname.getText();
                    String sNo = txtSupno.getText();
                    String sOrd = txtSupor.getText();
                    String sDate = txtSupdate.getText();
                    String sQty = cbxSupQty.getSelectedItem().toString();
                    String sPrice = txtSupprice.getText();
                    String sStat = cbxSupstat.getSelectedItem().toString();
                    
                    tblModel.setValueAt(sID, tblSup.getSelectedRow(), 0);
                    tblModel.setValueAt(sName, tblSup.getSelectedRow(), 1);
                    tblModel.setValueAt(sNo, tblSup.getSelectedRow(), 2);
                    tblModel.setValueAt(sOrd, tblSup.getSelectedRow(), 3);
                    tblModel.setValueAt(sDate, tblSup.getSelectedRow(), 4);
                    tblModel.setValueAt(sQty, tblSup.getSelectedRow(), 5);
                    tblModel.setValueAt(sPrice, tblSup.getSelectedRow(), 6);
                    tblModel.setValueAt(sStat, tblSup.getSelectedRow(), 7);
                    
                    txtSupID.setText(sID);
                    txtSupname.setText(sName);
                    txtSupno.setText(sNo);
                    txtSupor.setText(sOrd);
                    txtSupdate.setText(sDate);
                    txtSupprice.setText(sPrice);
                    }
                    
                    //Text Fields will REFRESH after updating
                    txtSupID.setText("");
                    txtSupname.setText("");
                    txtSupno.setText("");
                    txtSupor.setText("");
                    txtSupdate.setText("");
                    txtSupprice.setText("");
                }
                else {
                    JOptionPane.showMessageDialog(new JFrame(), "Failed to Edit Client", "System Message", JOptionPane.ERROR_MESSAGE);
                }              
            } catch (SQLException ex) {
                Logger.getLogger(InvSystem.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_btnSupEditActionPerformed

    private void tblSupMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblSupMouseClicked
        
        DefaultTableModel tblModel = (DefaultTableModel) tblSup.getModel();
        
        int cbxQty = tblSup.getSelectedRow();
        int cbxStat = tblSup.getSelectedRow();
        
        String spID = tblModel.getValueAt(tblSup.getSelectedRow(), 0).toString();
        String spName = tblModel.getValueAt(tblSup.getSelectedRow(), 1).toString();
        String spNo = tblModel.getValueAt(tblSup.getSelectedRow(), 2).toString();
        String spOrd = tblModel.getValueAt(tblSup.getSelectedRow(), 3).toString();
        String spDate = tblModel.getValueAt(tblSup.getSelectedRow(), 4).toString();
        String spQty = tblModel.getValueAt(cbxQty, 5).toString();
        String spPrice = tblModel.getValueAt(tblSup.getSelectedRow(), 6).toString();
        String spStat = tblModel.getValueAt(cbxStat, 7).toString();
        
        txtSupID.setText(spID);
        txtSupname.setText(spName);
        txtSupno.setText(spNo);
        txtSupor.setText(spOrd);
        txtSupdate.setText(spDate);
        cbxSupQty.setSelectedItem(spQty);
        txtSupprice.setText(spPrice);
        cbxSupstat.setSelectedItem(spStat);
    }//GEN-LAST:event_tblSupMouseClicked

    private void btnSupDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSupDeleteActionPerformed
        
        DefaultTableModel tblModel = (DefaultTableModel) tblSup.getModel();

        //Selected product on JTABLE will be REMOVED
        if (tblSup.getSelectedRowCount() == 1) {
            try {
                
                int selectedRow = tblSup.getSelectedRow();
                Object supData = tblModel.getValueAt(selectedRow, 0);
                int supChsn;

                try {
                    supChsn = Integer.parseInt(supData.toString());   
                } 
                catch (NumberFormatException e) {
                return;
                }
                
                tblModel.removeRow(selectedRow);
                
                //Will set STATUS of a Client terminated on DATABASE
                String sql = "UPDATE supmng SET sStat = 'Archived' WHERE sID=?";
                try (PreparedStatement pst = con.prepareStatement(sql)) {
                    pst.setInt(1, supChsn);
                    pst.executeUpdate();
                }

                JOptionPane.showMessageDialog(null, "A Supplier has been Deleted Successfully");

                //Fields will REFRESH after deletion
                txtSupID.setText("");
                txtSupname.setText("");
                txtSupno.setText("");
                txtSupor.setText("");
                txtSupdate.setText("");
                txtSupprice.setText("");

            } 
            catch (SQLException ex) {
                Logger.getLogger(InvSystem.class.getName()).log(Level.SEVERE, null, ex);
            }
        } 
        else {
            if (tblSup.getSelectedRowCount() == 0) {
                JOptionPane.showMessageDialog(null, "Please select a Client to Delete");
            }
        }
    }//GEN-LAST:event_btnSupDeleteActionPerformed

    private void btnSupViewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSupViewActionPerformed
        
            try {

            Class.forName("com.mysql.cj.jdbc.Driver");
            Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/pcthings?useSSL=false", "root", "");

            Statement st = con.createStatement();

            String sql = "SELECT * FROM supmng WHERE sStat = 'Active'";
            ResultSet rs = st.executeQuery(sql);

            DefaultTableModel tbModel = (DefaultTableModel) tblSup.getModel();
            tbModel.setRowCount(0); // Clear existing rows before adding new ones
            
            boolean dataxst = false;
            while (rs.next()) {
                
                dataxst = true;
                
                String supID = String.valueOf(rs.getInt("sID"));
                String supName = rs.getString("sName");
                String supNo = rs.getString("sNo");
                String supProd = rs.getString("sPrd");
                String supDate = rs.getString("sDate");
                String supQty = rs.getString("sQty");
                String supPrice = rs.getString("sPrice");
                String prStat = rs.getString("spStat");

                String data[] = {supID, supName, supNo, supProd, supDate, supQty, supPrice, prStat};
                tbModel.addRow(data);
            }
            if (!dataxst) {
                JOptionPane.showMessageDialog(null, "No Data Found");
            }
        } 
        catch (ClassNotFoundException | SQLException ex) {
            Logger.getLogger(InvSystem.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnSupViewActionPerformed

    private void txtSupsearchKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSupsearchKeyReleased
        
        DefaultTableModel table = (DefaultTableModel)tblSup.getModel();
        String search = txtSupsearch.getText().toLowerCase();
        TableRowSorter<DefaultTableModel> tr = new TableRowSorter<>(table);
        tblSup.setRowSorter(tr);
        
        int[] findUclm = {0, 1};
        tr.setRowFilter(RowFilter.regexFilter(search, findUclm)); 
    }//GEN-LAST:event_txtSupsearchKeyReleased

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(InvSystem.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(InvSystem.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(InvSystem.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(InvSystem.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new InvSystem().setVisible(true);
                } catch (SQLException ex) {
                    Logger.getLogger(InvSystem.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnEdit;
    private javax.swing.JButton btnSupAdd;
    private javax.swing.JButton btnSupDelete;
    private javax.swing.JButton btnSupEdit;
    private javax.swing.JButton btnSupView;
    private javax.swing.JButton btnTot;
    private javax.swing.JButton btnTot1;
    private javax.swing.JButton btnUdelete;
    private javax.swing.JButton btnUedit;
    private javax.swing.JButton btnUview;
    private javax.swing.JComboBox<String> cbxProdcat;
    private javax.swing.JComboBox<String> cbxProdpart;
    private javax.swing.JComboBox<String> cbxSupQty;
    private javax.swing.JComboBox<String> cbxSupstat;
    private javax.swing.JComboBox<String> cbxUstat;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTabbedPane jTabbedPane2;
    private javax.swing.JLabel lblTot;
    private javax.swing.JTable tblAcc;
    private javax.swing.JTable tblProd;
    private javax.swing.JTable tblSup;
    private javax.swing.JTextField txtProdID;
    private javax.swing.JTextField txtProdQty;
    private javax.swing.JTextField txtProddate;
    private javax.swing.JTextField txtProdname;
    private javax.swing.JTextField txtProdprice;
    private javax.swing.JTextField txtSearch;
    private javax.swing.JTextField txtSupID;
    private javax.swing.JTextField txtSupdate;
    private javax.swing.JTextField txtSupname;
    private javax.swing.JTextField txtSupno;
    private javax.swing.JTextField txtSupor;
    private javax.swing.JTextField txtSupprice;
    private javax.swing.JTextField txtSupsearch;
    private javax.swing.JTextField txtUan;
    private javax.swing.JTextField txtUemail;
    private javax.swing.JTextField txtUfname;
    private javax.swing.JTextField txtUlname;
    private javax.swing.JTextField txtUsearch;
    // End of variables declaration//GEN-END:variables
}
